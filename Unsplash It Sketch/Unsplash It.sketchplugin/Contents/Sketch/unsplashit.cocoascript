// Use an image from Unsplash.com (shift command u)
var onRun = function (context) {

    // Global variables
    var doc = context.document;
    var plugin = context.plugin;
    var page = doc.currentPage();
    var artboard = page.currentArtboard();
    var app = NSApplication.sharedApplication();
    var selection = context.selection;


    if ( selection.count() == 0 )
    {
        // nothing selected
        app.displayDialog_withTitle("For this plugin to work right you have to select at least one shape layer", "No shape layer selected");
    }
    else
    {

        for(var i = 0; i < [selection count]; i++) {

            var layer = selection[i];
            var layerSizes = layer.frame();

            // is the current layer a shape layer?
            if( [layer class] == MSShapeGroup) {

                var fill = layer.style().fills().firstObject();
                var imageURL;
                var tags;
                var name = layer.name().trim();

                // check for tags in the layer name
                var matches = name.match(/\[(.*?)\]/);
                if (matches) {
                    tags = matches[1];
                }

                // build the URL to retrieve the image
                if(tags) {
                    imageURL = "https://source.unsplash.com/"+[layerSizes width]+"x"+[layerSizes height]+"/?" + encodeURI(tags);
                } else {
                    imageURL = "https://source.unsplash.com/random/"+[layerSizes width]+"x"+[layerSizes height];
                }

                var imageData = NSImage.alloc().initWithData( get(imageURL) );

                fill.setFillType(4);
                fill.setPatternImage( imageData );
			    fill.setPatternFillType(1);

            }
            else {
                app.displayDialog_withTitle("You did run the plugin on “" + [layer name] + "” that is not a shape layer. Select a shape layer to use Unsplash It", "Unsplash It works on Shape Layer only");
            }
        }

        doc.showMessage("Unsplash It, done!");
    }


    function get(url) {

        var request = NSURLRequest.requestWithURL(NSURL.URLWithString(url));
        var response = NSURLConnection.sendSynchronousRequest_returningResponse_error(request, null, null);

        return response;
    }

};
